package ftn.uns.ac.rs.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;

import ftn.uns.ac.rs.dto.FormArticleResponse;
import ftn.uns.ac.rs.dto.FormEnumResponse;
import ftn.uns.ac.rs.dto.FormFieldsResponse;
import ftn.uns.ac.rs.dto.FormSubmissionRequest;
import ftn.uns.ac.rs.dto.ProcesDto;
import ftn.uns.ac.rs.model.ArticleData;
import ftn.uns.ac.rs.services.NewArticleService;

@Controller
public class NewArticleController {
	
	@Autowired
	NewArticleService newArticleService;
	
	@GetMapping(path = "/startNewArticle", produces = "application/json")
    public ResponseEntity<FormArticleResponse> startRegistration() {
		FormArticleResponse paymentOrderResponse = newArticleService.start();
        return ResponseEntity.ok().body(paymentOrderResponse);
    }
	
	@PostMapping(path = "/chooseMagazine/{taskId}/{username}", produces = "application/json")
    public ResponseEntity<Boolean> chooseMagazine(@RequestBody List<FormSubmissionRequest> dto, @PathVariable String taskId, @PathVariable String username) {
		Boolean response = newArticleService.chooseMagazine(dto,taskId,username);
		return ResponseEntity.ok().body(response);
    }
	
	@GetMapping(path = "/getBasicInfo/{processInstanceId}", produces = "application/json")
    public ResponseEntity<FormFieldsResponse> getBasicInfo(@PathVariable String processInstanceId) {
		FormFieldsResponse formFieldsResponse = newArticleService.getBasicInfo(processInstanceId);
        return ResponseEntity.ok().body(formFieldsResponse);
    }
	
	@GetMapping(path = "/getPath", produces = "application/json")
    public ResponseEntity<ProcesDto> getPath() {
		ProcesDto path = newArticleService.getPath();
        return ResponseEntity.ok().body(path);
    }
	
	@PostMapping(path = "/saveBasicInfo/{procesId}", produces = "application/json")
    public ResponseEntity<Boolean> saveBasicInfo(@RequestBody List<FormSubmissionRequest> dto, @PathVariable String procesId) {
		Boolean valid = newArticleService.saveBasicInfo(dto,procesId);
		return ResponseEntity.ok().body(valid);
    }
	
	@GetMapping(path = "/getTematika", produces = "application/json")
    public ResponseEntity<List<ArticleData>> getTematika() {
		List<ArticleData> formFieldsResponse = newArticleService.getAllArticleForCheck();
        return ResponseEntity.ok().body(formFieldsResponse);
    }

}
